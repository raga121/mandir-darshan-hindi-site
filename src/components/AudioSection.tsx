
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Music, Play, Download, Volume2, Headphones, Star } from 'lucide-react';

const AudioSection = () => {
  const audioCategories = [
    {
      name: "‡§ó‡§£‡•á‡§∂ ‡§≠‡§ú‡§®",
      description: "‡§≠‡§ó‡§µ‡§æ‡§® ‡§ó‡§£‡•á‡§∂ ‡§ï‡•á ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§≠‡§ú‡§®",
      icon: <Music className="w-6 h-6" />,
      color: "text-orange-600",
      tracks: [
        { title: "‡§µ‡§ï‡•ç‡§∞‡§§‡•Å‡§Ç‡§° ‡§Æ‡§π‡§æ‡§ï‡§æ‡§Ø", duration: "5:30", type: "‡§Ü‡§∞‡§§‡•Ä" },
        { title: "‡§ó‡§£‡§™‡§§‡§ø ‡§¨‡§™‡•ç‡§™‡§æ ‡§Æ‡•ã‡§∞‡§Ø‡§æ", duration: "4:15", type: "‡§≠‡§ú‡§®" },
        { title: "‡§è‡§ï‡§¶‡§Ç‡§§ ‡§Æ‡§π‡§æ‡§ï‡§æ‡§Ø", duration: "6:20", type: "‡§∏‡•ç‡§§‡•Å‡§§‡§ø" },
        { title: "‡§ú‡§Ø ‡§ó‡§£‡•á‡§∂ ‡§¶‡•á‡§µ‡§æ", duration: "3:45", type: "‡§Ü‡§∞‡§§‡•Ä" }
      ]
    },
    {
      name: "‡§Æ‡§Ç‡§§‡•ç‡§∞ ‡§ú‡§æ‡§™",
      description: "‡§∂‡•Å‡§¶‡•ç‡§ß ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡§æ ‡§ú‡§æ‡§™",
      icon: <Volume2 className="w-6 h-6" />,
      color: "text-purple-600",
      tracks: [
        { title: "‡§ó‡§£‡•á‡§∂ ‡§ó‡§æ‡§Ø‡§§‡•ç‡§∞‡•Ä ‡§Æ‡§Ç‡§§‡•ç‡§∞", duration: "10:00", type: "‡§Æ‡§Ç‡§§‡•ç‡§∞" },
        { title: "‡•ê ‡§ó‡§Ç ‡§ó‡§£‡§™‡§§‡§Ø‡•á ‡§®‡§Æ‡§É", duration: "15:00", type: "‡§ú‡§æ‡§™" },
        { title: "‡§ó‡§£‡•á‡§∂ ‡§Ö‡§∑‡•ç‡§ü‡§ï‡§Æ‡•ç", duration: "8:30", type: "‡§∏‡•ç‡§§‡•ã‡§§‡•ç‡§∞" },
        { title: "‡§∏‡§Ç‡§ï‡§ü‡§®‡§æ‡§∂‡§® ‡§ó‡§£‡•á‡§∂ ‡§∏‡•ç‡§§‡•ã‡§§‡•ç‡§∞", duration: "12:00", type: "‡§∏‡•ç‡§§‡•ã‡§§‡•ç‡§∞" }
      ]
    },
    {
      name: "‡§Ü‡§∞‡§§‡•Ä ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π",
      description: "‡§¶‡•à‡§®‡§ø‡§ï ‡§Ü‡§∞‡§§‡•Ä ‡§ï‡§æ ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π",
      icon: <Star className="w-6 h-6" />,
      color: "text-red-600",
      tracks: [
        { title: "‡§™‡•ç‡§∞‡§æ‡§§‡§É ‡§ï‡§æ‡§≤‡•Ä‡§® ‡§Ü‡§∞‡§§‡•Ä", duration: "4:00", type: "‡§Ü‡§∞‡§§‡•Ä" },
        { title: "‡§Æ‡§ß‡•ç‡§Ø‡§æ‡§π‡•ç‡§® ‡§Ü‡§∞‡§§‡•Ä", duration: "3:30", type: "‡§Ü‡§∞‡§§‡•Ä" },
        { title: "‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ ‡§Ü‡§∞‡§§‡•Ä", duration: "5:00", type: "‡§Ü‡§∞‡§§‡•Ä" },
        { title: "‡§∞‡§æ‡§§‡•ç‡§∞‡§ø ‡§Ü‡§∞‡§§‡•Ä", duration: "4:30", type: "‡§Ü‡§∞‡§§‡•Ä" }
      ]
    },
    {
      name: "‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§ó‡•Ä‡§§",
      description: "‡§µ‡§ø‡§∂‡•á‡§∑ ‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§ó‡•Ä‡§§",
      icon: <Headphones className="w-6 h-6" />,
      color: "text-green-600",
      tracks: [
        { title: "‡§ó‡§£‡•á‡§∂ ‡§ö‡§§‡•Å‡§∞‡•ç‡§•‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑", duration: "7:45", type: "‡§â‡§§‡•ç‡§∏‡§µ" },
        { title: "‡§∏‡§Ç‡§ï‡§∑‡•ç‡§ü‡•Ä ‡§ö‡§§‡•Å‡§∞‡•ç‡§•‡•Ä", duration: "6:15", type: "‡§µ‡•ç‡§∞‡§§" },
        { title: "‡§µ‡§ø‡§®‡§æ‡§Ø‡§ï ‡§ö‡§§‡•Å‡§∞‡•ç‡§•‡•Ä", duration: "5:30", type: "‡§§‡•ç‡§Ø‡•ã‡§π‡§æ‡§∞" },
        { title: "‡§Ö‡§®‡§Ç‡§§ ‡§ö‡§§‡•Å‡§∞‡•ç‡§¶‡§∂‡•Ä", duration: "8:00", type: "‡§µ‡§ø‡§∏‡§∞‡•ç‡§ú‡§®" }
      ]
    }
  ];

  const getTypeColor = (type: string) => {
    switch (type) {
      case "‡§Ü‡§∞‡§§‡•Ä": return "bg-orange-100 text-orange-800";
      case "‡§≠‡§ú‡§®": return "bg-blue-100 text-blue-800";
      case "‡§Æ‡§Ç‡§§‡•ç‡§∞": return "bg-purple-100 text-purple-800";
      case "‡§∏‡•ç‡§§‡•ã‡§§‡•ç‡§∞": return "bg-green-100 text-green-800";
      case "‡§ú‡§æ‡§™": return "bg-yellow-100 text-yellow-800";
      case "‡§â‡§§‡•ç‡§∏‡§µ": return "bg-red-100 text-red-800";
      default: return "bg-gray-100 text-gray-800";
    }
  };

  const handlePlay = (title: string) => {
    // In a real implementation, this would play the audio
    console.log(`Playing: ${title}`);
  };

  const handleDownload = (title: string) => {
    // In a real implementation, this would download the audio
    console.log(`Downloading: ${title}`);
  };

  return (
    <div>
      <h2 className="text-3xl font-bold text-center mb-8 text-gray-800">
        üéµ ‡§≠‡§ú‡§® ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π
      </h2>
      
      <div className="mb-8">
        <Card className="bg-gradient-to-r from-purple-100 to-pink-100">
          <CardContent className="p-6">
            <div className="text-center">
              <Music className="w-12 h-12 mx-auto mb-4 text-purple-600" />
              <h3 className="text-xl font-bold mb-2">‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•á ‡§∂‡§æ‡§Ç‡§§‡§ø</h3>
              <p className="text-gray-700">
                "‡§≠‡§ú‡§® ‡§ó‡§æ‡§®‡§æ ‡§î‡§∞ ‡§∏‡•Å‡§®‡§®‡§æ ‡§π‡•É‡§¶‡§Ø ‡§ï‡•ã ‡§∂‡•Å‡§¶‡•ç‡§ß ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Æ‡§® ‡§ï‡•ã ‡§∂‡§æ‡§Ç‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§"
              </p>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {audioCategories.map((category, index) => (
          <Card key={index} className="hover:shadow-lg transition-shadow duration-300">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <div className={category.color}>
                  {category.icon}
                </div>
                {category.name}
              </CardTitle>
              <p className="text-sm text-gray-600">{category.description}</p>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {category.tracks.map((track, trackIndex) => (
                  <div key={trackIndex} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div className="flex-1">
                      <h4 className="font-medium mb-1">{track.title}</h4>
                      <div className="flex items-center gap-2">
                        <Badge variant="outline" className={getTypeColor(track.type)}>
                          {track.type}
                        </Badge>
                        <span className="text-sm text-gray-500">{track.duration}</span>
                      </div>
                    </div>
                    <div className="flex items-center gap-2">
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handlePlay(track.title)}
                        className="hover:bg-green-50"
                      >
                        <Play className="w-4 h-4" />
                      </Button>
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handleDownload(track.title)}
                        className="hover:bg-blue-50"
                      >
                        <Download className="w-4 h-4" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="mt-8 grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card className="bg-yellow-50">
          <CardHeader>
            <CardTitle className="text-center">üì± ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§ê‡§™</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-center space-y-3">
              <p className="text-sm text-gray-700">
                ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§≠‡•Ä ‡§≠‡§ú‡§® ‡§î‡§∞ ‡§Ü‡§∞‡§§‡•Ä ‡§Ö‡§™‡§®‡•á ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§®‡•á‡§Ç
              </p>
              <div className="space-y-2">
                <Button variant="outline" className="w-full">
                  üì± Android ‡§ê‡§™ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
                </Button>
                <Button variant="outline" className="w-full">
                  üçé iOS ‡§ê‡§™ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-green-50">
          <CardHeader>
            <CardTitle className="text-center">üéß ‡§∏‡•Å‡§®‡§®‡•á ‡§ï‡•á ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2 text-sm">
              <p>‚Ä¢ ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ ‡§Æ‡§® ‡§∏‡•á ‡§∏‡•Å‡§®‡•á‡§Ç</p>
              <p>‚Ä¢ ‡§∏‡•Å‡§¨‡§π ‡§Ø‡§æ ‡§∂‡§æ‡§Æ ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Å‡§®‡§®‡§æ ‡§â‡§§‡•ç‡§§‡§Æ</p>
              <p>‚Ä¢ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§∏‡•á ‡§∏‡•Å‡§®‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡§® ‡§≤‡§ó‡§æ‡§è‡§Ç</p>
              <p>‚Ä¢ ‡§Ö‡§®‡•ç‡§Ø ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç</p>
              <p>‚Ä¢ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•Å‡§®‡§®‡•á ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç</p>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="mt-6 p-4 bg-gradient-to-r from-blue-100 to-indigo-100 rounded-lg">
        <h4 className="font-semibold text-lg mb-2 text-center">üéº ‡§≤‡§æ‡§á‡§µ ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ</h4>
        <div className="text-center space-y-2 text-sm">
          <p>‡§¶‡•à‡§®‡§ø‡§ï ‡§Ü‡§∞‡§§‡•Ä ‡§ï‡§æ ‡§≤‡§æ‡§á‡§µ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞‡§£</p>
          <div className="flex justify-center gap-4">
            <Badge variant="outline">‡§™‡•ç‡§∞‡§æ‡§§‡§É 6:00 AM</Badge>
            <Badge variant="outline">‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ 7:00 PM</Badge>
          </div>
          <Button className="mt-2">
            üî¥ ‡§≤‡§æ‡§á‡§µ ‡§¶‡•á‡§ñ‡•á‡§Ç
          </Button>
        </div>
      </div>
    </div>
  );
};

export default AudioSection;

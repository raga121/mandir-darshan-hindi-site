
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Calendar, Star, Moon, Sun } from 'lucide-react';

const CalendarEvents = () => {
  const yearlyEvents = [
    {
      month: "рдЬрдирд╡рд░реА",
      events: [
        { name: "рдордХрд░ рд╕рдВрдХреНрд░рд╛рдВрддрд┐", date: "14 рдЬрдирд╡рд░реА", type: "рддреНрдпреЛрд╣рд╛рд░" },
        { name: "рд╕рдВрдХрд╖реНрдЯреА рдЪрддреБрд░реНрдереА", date: "19 рдЬрдирд╡рд░реА", type: "рд╡реНрд░рдд" }
      ]
    },
    {
      month: "рдлрд░рд╡рд░реА",
      events: [
        { name: "рдорд╛рдШреА рдкреВрд░реНрдгрд┐рдорд╛", date: "24 рдлрд░рд╡рд░реА", type: "рдкреВрд░реНрдгрд┐рдорд╛" },
        { name: "рдорд╣рд╛ рд╢рд┐рд╡рд░рд╛рддреНрд░рд┐", date: "8 рдорд╛рд░реНрдЪ", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    },
    {
      month: "рдорд╛рд░реНрдЪ",
      events: [
        { name: "рд╣реЛрд▓реА", date: "25 рдорд╛рд░реНрдЪ", type: "рддреНрдпреЛрд╣рд╛рд░" },
        { name: "рдЪреИрддреНрд░ рдирд╡рд░рд╛рддреНрд░рд┐", date: "9 рдЕрдкреНрд░реИрд▓ рд╕реЗ", type: "рдирд╡рд░рд╛рддреНрд░рд┐" }
      ]
    },
    {
      month: "рдЕрдкреНрд░реИрд▓",
      events: [
        { name: "рд░рд╛рдо рдирд╡рдореА", date: "17 рдЕрдкреНрд░реИрд▓", type: "рддреНрдпреЛрд╣рд╛рд░" },
        { name: "рд╣рдиреБрдорд╛рди рдЬрдпрдВрддреА", date: "23 рдЕрдкреНрд░реИрд▓", type: "рдЬрдпрдВрддреА" }
      ]
    },
    {
      month: "рдордИ",
      events: [
        { name: "рдмреБрджреНрдз рдкреВрд░реНрдгрд┐рдорд╛", date: "23 рдордИ", type: "рдкреВрд░реНрдгрд┐рдорд╛" },
        { name: "рд╡реИрд╢рд╛рдЦ рдкреВрд░реНрдгрд┐рдорд╛", date: "23 рдордИ", type: "рдкреВрд░реНрдгрд┐рдорд╛" }
      ]
    },
    {
      month: "рдЬреВрди",
      events: [
        { name: "рдЧрдВрдЧрд╛ рджрд╢рд╣рд░рд╛", date: "17 рдЬреВрди", type: "рддреНрдпреЛрд╣рд╛рд░" },
        { name: "рдпреЛрдЧ рджрд┐рд╡рд╕", date: "21 рдЬреВрди", type: "рд╡рд┐рд╢реЗрд╖" }
      ]
    },
    {
      month: "рдЬреБрд▓рд╛рдИ",
      events: [
        { name: "рдЧреБрд░реБ рдкреВрд░реНрдгрд┐рдорд╛", date: "21 рдЬреБрд▓рд╛рдИ", type: "рдкреВрд░реНрдгрд┐рдорд╛" },
        { name: "рд╕рд╛рд╡рди рд╢реБрд░реБрдЖрдд", date: "4 рдЬреБрд▓рд╛рдИ", type: "рдорд╛рд╣" }
      ]
    },
    {
      month: "рдЕрдЧрд╕реНрдд",
      events: [
        { name: "рд░рдХреНрд╖рд╛рдмрдВрдзрди", date: "19 рдЕрдЧрд╕реНрдд", type: "рддреНрдпреЛрд╣рд╛рд░" },
        { name: "рдЬрдиреНрдорд╛рд╖реНрдЯрдореА", date: "26 рдЕрдЧрд╕реНрдд", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    },
    {
      month: "рд╕рд┐рддрдВрдмрд░",
      events: [
        { name: "рдЧрдгреЗрд╢ рдЪрддреБрд░реНрдереА", date: "15 рд╕рд┐рддрдВрдмрд░", type: "рдорд╣рддреНрд╡рдкреВрд░реНрдг" },
        { name: "рдЕрдирдВрдд рдЪрддреБрд░реНрджрд╢реА", date: "26 рд╕рд┐рддрдВрдмрд░", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    },
    {
      month: "рдЕрдХреНрдЯреВрдмрд░",
      events: [
        { name: "рд╢рд╛рд░рджреАрдп рдирд╡рд░рд╛рддреНрд░рд┐", date: "3 рдЕрдХреНрдЯреВрдмрд░ рд╕реЗ", type: "рдирд╡рд░рд╛рддреНрд░рд┐" },
        { name: "рджрд╢рд╣рд░рд╛", date: "12 рдЕрдХреНрдЯреВрдмрд░", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    },
    {
      month: "рдирд╡рдВрдмрд░",
      events: [
        { name: "рджреАрдкрд╛рд╡рд▓реА", date: "1 рдирд╡рдВрдмрд░", type: "рдорд╣рддреНрд╡рдкреВрд░реНрдг" },
        { name: "рднрд╛рдИ рджреВрдЬ", date: "3 рдирд╡рдВрдмрд░", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    },
    {
      month: "рджрд┐рд╕рдВрдмрд░",
      events: [
        { name: "рдорд╛рд░реНрдЧрд╢реАрд░реНрд╖ рдкреВрд░реНрдгрд┐рдорд╛", date: "15 рджрд┐рд╕рдВрдмрд░", type: "рдкреВрд░реНрдгрд┐рдорд╛" },
        { name: "рд╡рд┐рд╡рд╛рд╣ рдкрдВрдЪрдореА", date: "17 рджрд┐рд╕рдВрдмрд░", type: "рддреНрдпреЛрд╣рд╛рд░" }
      ]
    }
  ];

  const getTypeColor = (type: string) => {
    switch (type) {
      case "рдорд╣рддреНрд╡рдкреВрд░реНрдг": return "bg-red-100 text-red-800";
      case "рддреНрдпреЛрд╣рд╛рд░": return "bg-orange-100 text-orange-800";
      case "рд╡реНрд░рдд": return "bg-blue-100 text-blue-800";
      case "рдкреВрд░реНрдгрд┐рдорд╛": return "bg-yellow-100 text-yellow-800";
      case "рдирд╡рд░рд╛рддреНрд░рд┐": return "bg-purple-100 text-purple-800";
      case "рдЬрдпрдВрддреА": return "bg-green-100 text-green-800";
      default: return "bg-gray-100 text-gray-800";
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case "рдорд╣рддреНрд╡рдкреВрд░реНрдг": return <Star className="w-4 h-4" />;
      case "рдкреВрд░реНрдгрд┐рдорд╛": return <Moon className="w-4 h-4" />;
      case "рддреНрдпреЛрд╣рд╛рд░": return <Sun className="w-4 h-4" />;
      default: return <Calendar className="w-4 h-4" />;
    }
  };

  return (
    <div>
      <h2 className="text-3xl font-bold text-center mb-8 text-gray-800">
        ЁЯУЕ рд╡рд╛рд░реНрд╖рд┐рдХ рдкрдВрдЪрд╛рдВрдЧ
      </h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {yearlyEvents.map((month, index) => (
          <Card key={index} className="hover:shadow-lg transition-shadow duration-300">
            <CardHeader className="pb-3">
              <CardTitle className="text-center text-lg font-semibold text-orange-600">
                {month.month}
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {month.events.map((event, eventIndex) => (
                  <div key={eventIndex} className="flex items-start gap-3">
                    <div className="mt-1">
                      {getTypeIcon(event.type)}
                    </div>
                    <div className="flex-1">
                      <h4 className="font-medium mb-1">{event.name}</h4>
                      <p className="text-sm text-gray-600 mb-2">{event.date}</p>
                      <Badge variant="outline" className={getTypeColor(event.type)}>
                        {event.type}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="mt-8 p-6 bg-gradient-to-r from-orange-100 to-red-100 rounded-lg">
        <h3 className="text-xl font-bold mb-4 text-center">ЁЯУЦ рдкрдВрдЪрд╛рдВрдЧ рдХреА рдЬрд╛рдирдХрд╛рд░реА</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <h4 className="font-semibold mb-2">рдорд╣рддреНрд╡рдкреВрд░реНрдг рддрд┐рдерд┐рдпрд╛рдВ:</h4>
            <ul className="space-y-1 text-gray-700">
              <li>тАв рдПрдХрд╛рджрд╢реА рд╡реНрд░рдд - рдорд╣реАрдиреЗ рдореЗрдВ рджреЛ рдмрд╛рд░</li>
              <li>тАв рдкреНрд░рджреЛрд╖ рд╡реНрд░рдд - рдорд╣реАрдиреЗ рдореЗрдВ рджреЛ рдмрд╛рд░</li>
              <li>тАв рд╕рдВрдХрд╖реНрдЯреА рдЪрддреБрд░реНрдереА - рдорд╛рд╕рд┐рдХ рдЧрдгреЗрд╢ рд╡реНрд░рдд</li>
              <li>тАв рдЕрдорд╛рд╡рд╕реНрдпрд╛ - рдкрд┐рддреГ рдкрдХреНрд╖ рддрд░реНрдкрдг</li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold mb-2">рд╡рд┐рд╢реЗрд╖ рдкреВрдЬрд╛ рд╕рдордп:</h4>
            <ul className="space-y-1 text-gray-700">
              <li>тАв рдмреНрд░рд╣реНрдо рдореБрд╣реВрд░реНрдд - 4:00 рд╕реЗ 6:00 рддрдХ</li>
              <li>тАв рдкреНрд░рд╛рддрдГ рдХрд╛рд▓ - 6:00 рд╕реЗ 8:00 рддрдХ</li>
              <li>тАв рд╕рдВрдзреНрдпрд╛ рдХрд╛рд▓ - 6:00 рд╕реЗ 7:00 рддрдХ</li>
              <li>тАв рд░рд╛рддреНрд░рд┐ рдХрд╛рд▓ - 9:00 рд╕реЗ 10:00 рддрдХ</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CalendarEvents;
